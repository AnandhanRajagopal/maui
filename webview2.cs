// WinRT
//
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Roslyn-based GenAPI
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Microsoft.Web.WebView2.Core
{
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2RcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2
    {
        public uint BrowserProcessId { get { throw null; } }
        public bool CanGoBack { get { throw null; } }
        public bool CanGoForward { get { throw null; } }
        public bool ContainsFullScreenElement { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2CookieManager CookieManager { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2DefaultDownloadDialogCornerAlignment DefaultDownloadDialogCornerAlignment { get { throw null; } set { throw null; } }
        public Windows.Foundation.Point DefaultDownloadDialogMargin { get { throw null; } set { throw null; } }
        public string DocumentTitle { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2Environment Environment { get { throw null; } }
        public string FaviconUri { get { throw null; } }
        public uint FrameId { get { throw null; } }
        public bool IsDefaultDownloadDialogOpen { get { throw null; } }
        public bool IsDocumentPlayingAudio { get { throw null; } }
        public bool IsMuted { get { throw null; } set { throw null; } }
        public bool IsSuspended { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2MemoryUsageTargetLevel MemoryUsageTargetLevel { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2Profile Profile { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2Settings Settings { get { throw null; } }
        public string Source { get { throw null; } }
        public string StatusBarText { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2 FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2 x, Microsoft.Web.WebView2.Core.CoreWebView2 y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2 x, Microsoft.Web.WebView2.Core.CoreWebView2 y) { throw null; }
        public void AddHostObjectToScript(string name, object rawObject) { throw null; }
        public Windows.Foundation.IAsyncOperation<string> AddScriptToExecuteOnDocumentCreatedAsync(string javaScript) { throw null; }
        public void AddWebResourceRequestedFilter(string uri, Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext resourceContext, Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestSourceKinds requestSourceKinds) { throw null; }
        public void AddWebResourceRequestedFilter(string uri, Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext ResourceContext) { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgs> BasicAuthenticationRequested { add { throw null; } remove { throw null; } }
        public Windows.Foundation.IAsyncOperation<string> CallDevToolsProtocolMethodAsync(string methodName, string parametersAsJson) { throw null; }
        public Windows.Foundation.IAsyncOperation<string> CallDevToolsProtocolMethodForSessionAsync(string sessionId, string methodName, string parametersAsJson) { throw null; }
        public Windows.Foundation.IAsyncAction CapturePreviewAsync(Microsoft.Web.WebView2.Core.CoreWebView2CapturePreviewImageFormat imageFormat, Windows.Storage.Streams.IRandomAccessStream imageStream) { throw null; }
        public Windows.Foundation.IAsyncAction ClearServerCertificateErrorActionsAsync() { throw null; }
        public void ClearVirtualHostNameToFolderMapping(string hostName) { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs> ClientCertificateRequested { add { throw null; } remove { throw null; } }
        public void CloseDefaultDownloadDialog() { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, object> ContainsFullScreenElementChanged { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs> ContentLoading { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgs> ContextMenuRequested { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, object> DocumentTitleChanged { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs> DOMContentLoaded { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs> DownloadStarting { add { throw null; } remove { throw null; } }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2 other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public Windows.Foundation.IAsyncOperation<string> ExecuteScriptAsync(string javaScript) { throw null; }
        public Windows.Foundation.IAsyncOperation<Microsoft.Web.WebView2.Core.CoreWebView2ExecuteScriptResult> ExecuteScriptWithResultAsync(string javaScript) { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, object> FaviconChanged { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs> FrameCreated { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs> FrameNavigationCompleted { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs> FrameNavigationStarting { add { throw null; } remove { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceiver GetDevToolsProtocolEventReceiver(string eventName) { throw null; }
        public Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.IRandomAccessStream> GetFaviconAsync(Microsoft.Web.WebView2.Core.CoreWebView2FaviconImageFormat format) { throw null; }
        public override int GetHashCode() { throw null; }
        public void GoBack() { throw null; }
        public void GoForward() { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, object> HistoryChanged { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, object> IsDefaultDownloadDialogOpenChanged { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, object> IsDocumentPlayingAudioChanged { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, object> IsMutedChanged { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2LaunchingExternalUriSchemeEventArgs> LaunchingExternalUriScheme { add { throw null; } remove { throw null; } }
        public void Navigate(string uri) { throw null; }
        public void NavigateToString(string htmlContent) { throw null; }
        public void NavigateWithWebResourceRequest(Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest Request) { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs> NavigationCompleted { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs> NavigationStarting { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs> NewWindowRequested { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2NotificationReceivedEventArgs> NotificationReceived { add { throw null; } remove { throw null; } }
        public void OpenDefaultDownloadDialog() { throw null; }
        public void OpenDevToolsWindow() { throw null; }
        public void OpenTaskManagerWindow() { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs> PermissionRequested { add { throw null; } remove { throw null; } }
        public void PostSharedBufferToScript(Microsoft.Web.WebView2.Core.CoreWebView2SharedBuffer sharedBuffer, Microsoft.Web.WebView2.Core.CoreWebView2SharedBufferAccess access, string additionalDataAsJson) { throw null; }
        public void PostWebMessageAsJson(string webMessageAsJson, System.Collections.Generic.IReadOnlyList<object> additionalObjects) { throw null; }
        public void PostWebMessageAsJson(string webMessageAsJson) { throw null; }
        public void PostWebMessageAsString(string webMessageAsString) { throw null; }
        public Windows.Foundation.IAsyncOperation<Microsoft.Web.WebView2.Core.CoreWebView2PrintStatus> PrintAsync(Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings printSettings) { throw null; }
        public Windows.Foundation.IAsyncOperation<bool> PrintToPdfAsync(string ResultFilePath, Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings printSettings) { throw null; }
        public Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.IRandomAccessStream> PrintToPdfStreamAsync(Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings printSettings) { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs> ProcessFailed { add { throw null; } remove { throw null; } }
        public void Reload() { throw null; }
        public void RemoveHostObjectFromScript(string name) { throw null; }
        public void RemoveScriptToExecuteOnDocumentCreated(string id) { throw null; }
        public void RemoveWebResourceRequestedFilter(string uri, Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext resourceContext, Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestSourceKinds requestSourceKinds) { throw null; }
        public void RemoveWebResourceRequestedFilter(string uri, Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext ResourceContext) { throw null; }
        public void Resume() { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIShowingEventArgs> SaveAsUIShowing { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2SaveFileSecurityCheckStartingEventArgs> SaveFileSecurityCheckStarting { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs> ScreenCaptureStarting { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs> ScriptDialogOpening { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgs> ServerCertificateErrorDetected { add { throw null; } remove { throw null; } }
        public void SetVirtualHostNameToFolderMapping(string hostName, string folderPath, Microsoft.Web.WebView2.Core.CoreWebView2HostResourceAccessKind accessKind) { throw null; }
        public void ShowPrintUI(Microsoft.Web.WebView2.Core.CoreWebView2PrintDialogKind printDialogKind) { throw null; }
        public Windows.Foundation.IAsyncOperation<Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIResult> ShowSaveAsUIAsync() { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs> SourceChanged { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, object> StatusBarTextChanged { add { throw null; } remove { throw null; } }
        public void Stop() { throw null; }
        public Windows.Foundation.IAsyncOperation<bool> TrySuspendAsync() { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs> WebMessageReceived { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs> WebResourceRequested { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs> WebResourceResponseReceived { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, object> WindowCloseRequested { add { throw null; } remove { throw null; } }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2AcceleratorKeyPressedEventArgs
    {
        public bool Handled { get { throw null; } set { throw null; } }
        public bool IsBrowserAcceleratorKeyEnabled { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2KeyEventKind KeyEventKind { get { throw null; } }
        public int KeyEventLParam { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2PhysicalKeyStatus PhysicalKeyStatus { get { throw null; } }
        public uint VirtualKey { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2BasicAuthenticationRequestedEventArgs
    {
        public bool Cancel { get { throw null; } set { throw null; } }
        public string Challenge { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationResponse Response { get { throw null; } }
        public string Uri { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public Windows.Foundation.Deferral GetDeferral() { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationResponseRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2BasicAuthenticationResponse
    {
        public string Password { get { throw null; } set { throw null; } }
        public string UserName { get { throw null; } set { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationResponse FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationResponse x, Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationResponse y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationResponse x, Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationResponse y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationResponse other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2BoundsMode
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2BoundsMode UseRasterizationScale = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2BoundsMode UseRawPixels = 0;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2BrowserExtensionRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2BrowserExtension
    {
        public string Id { get { throw null; } }
        public bool IsEnabled { get { throw null; } }
        public string Name { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2BrowserExtension FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2BrowserExtension x, Microsoft.Web.WebView2.Core.CoreWebView2BrowserExtension y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2BrowserExtension x, Microsoft.Web.WebView2.Core.CoreWebView2BrowserExtension y) { throw null; }
        public Windows.Foundation.IAsyncAction EnableAsync(bool IsEnabled) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2BrowserExtension other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public Windows.Foundation.IAsyncAction RemoveAsync() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2BrowserProcessExitedEventArgs
    {
        public Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitKind BrowserProcessExitKind { get { throw null; } }
        public uint BrowserProcessId { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2BrowserProcessExitKind
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitKind Failed = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitKind Normal = 0;
        public int value__;
    }
    [System.FlagsAttribute[missing]]
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2BrowsingDataKinds
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds AllDomStorage = 32;
        public const Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds AllProfile = 16384;
        public const Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds AllSite = 128;
        public const Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds BrowsingHistory = 4096;
        public const Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds CacheStorage = 16;
        public const Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds Cookies = 64;
        public const Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds DiskCache = 256;
        public const Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds DownloadHistory = 512;
        public const Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds FileSystems = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds GeneralAutofill = 1024;
        public const Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds IndexedDb = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds LocalStorage = 4;
        public const Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds PasswordAutosave = 2048;
        public const Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds ServiceWorkers = 32768;
        public const Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds Settings = 8192;
        public uint value__;
        public const Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds WebSql = 8;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2CapturePreviewImageFormat
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2CapturePreviewImageFormat Jpeg = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2CapturePreviewImageFormat Png = 0;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2CertificateRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2Certificate
    {
        public string DerEncodedSerialNumber { get { throw null; } }
        public string DisplayName { get { throw null; } }
        public string Issuer { get { throw null; } }
        public System.Collections.Generic.IReadOnlyList<string> PemEncodedIssuerCertificateChain { get { throw null; } }
        public string Subject { get { throw null; } }
        public double ValidFrom { get { throw null; } }
        public double ValidTo { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2Certificate FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2Certificate x, Microsoft.Web.WebView2.Core.CoreWebView2Certificate y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2Certificate x, Microsoft.Web.WebView2.Core.CoreWebView2Certificate y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2Certificate other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public Windows.Security.Cryptography.Certificates.Certificate ToCertificate() { throw null; }
        public string ToPemEncoding() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2ChannelSearchKind
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2ChannelSearchKind LeastStable = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ChannelSearchKind MostStable = 0;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2ClientCertificate
    {
        public string DerEncodedSerialNumber { get { throw null; } }
        public string DisplayName { get { throw null; } }
        public string Issuer { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateKind Kind { get { throw null; } }
        public System.Collections.Generic.IReadOnlyList<string> PemEncodedIssuerCertificateChain { get { throw null; } }
        public string Subject { get { throw null; } }
        public double ValidFrom { get { throw null; } }
        public double ValidTo { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate x, Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate x, Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public Windows.Security.Cryptography.Certificates.Certificate ToCertificate() { throw null; }
        public string ToPemEncoding() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2ClientCertificateKind
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateKind Other = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateKind Pin = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateKind SmartCard = 0;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2ClientCertificateRequestedEventArgs
    {
        public System.Collections.Generic.IReadOnlyList<string> AllowedCertificateAuthorities { get { throw null; } }
        public bool Cancel { get { throw null; } set { throw null; } }
        public bool Handled { get { throw null; } set { throw null; } }
        public string Host { get { throw null; } }
        public bool IsProxy { get { throw null; } }
        public System.Collections.Generic.IReadOnlyList<Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate> MutuallyTrustedCertificates { get { throw null; } }
        public int Port { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate SelectedCertificate { get { throw null; } set { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public Windows.Foundation.Deferral GetDeferral() { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2CompositionControllerRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2CompositionController : Microsoft.Web.WebView2.Core.CoreWebView2Controller
    {
        public Windows.UI.Core.CoreCursor Cursor { get { throw null; } }
        public object RootVisualTarget { get { throw null; } set { throw null; } }
        public static I As<I>() { throw null; }
        public static Microsoft.Web.WebView2.Core.CoreWebView2CompositionController FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2CompositionController x, Microsoft.Web.WebView2.Core.CoreWebView2CompositionController y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2CompositionController x, Microsoft.Web.WebView2.Core.CoreWebView2CompositionController y) { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2CompositionController, object> CursorChanged { add { throw null; } remove { throw null; } }
        public Windows.ApplicationModel.DataTransfer.DataPackageOperation DragEnter(Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragInfo dragInfo, Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragUIOverride dragUIOverride) { throw null; }
        public void DragLeave() { throw null; }
        public Windows.ApplicationModel.DataTransfer.DataPackageOperation DragOver(Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragInfo dragInfo, Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragUIOverride dragUIOverride) { throw null; }
        public Windows.ApplicationModel.DataTransfer.DataPackageOperation Drop(Windows.ApplicationModel.DataTransfer.DragDrop.Core.CoreDragInfo dragInfo) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2CompositionController other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionKind GetNonClientRegionAtPoint(Windows.Foundation.Point point) { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2CompositionController, Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionChangedEventArgs> NonClientRegionChanged { add { throw null; } remove { throw null; } }
        public System.Collections.Generic.IReadOnlyList<Windows.Foundation.Rect> QueryNonClientRegion(Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionKind Kind) { throw null; }
        public void SendMouseInput(Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind eventKind, Microsoft.Web.WebView2.Core.CoreWebView2MouseEventVirtualKeys virtualKeys, uint mouseData, Windows.Foundation.Point point) { throw null; }
        public void SendPointerInput(Microsoft.Web.WebView2.Core.CoreWebView2PointerEventKind eventKind, Microsoft.Web.WebView2.Core.CoreWebView2PointerInfo pointerInfo) { throw null; }
        protected override bool IsOverridableInterface(System.Guid iid) { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2ContentLoadingEventArgs
    {
        public bool IsErrorPage { get { throw null; } }
        public ulong NavigationId { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItemRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2ContextMenuItem
    {
        public System.Collections.Generic.IList<Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem> Children { get { throw null; } }
        public int CommandId { get { throw null; } }
        public Windows.Storage.Streams.IRandomAccessStream Icon { get { throw null; } }
        public bool IsChecked { get { throw null; } set { throw null; } }
        public bool IsEnabled { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItemKind Kind { get { throw null; } }
        public string Label { get { throw null; } }
        public string Name { get { throw null; } }
        public string ShortcutKeyDescription { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem x, Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem x, Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem y) { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem, object> CustomItemSelected { add { throw null; } remove { throw null; } }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2ContextMenuItemKind
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItemKind CheckBox = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItemKind Command = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItemKind Radio = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItemKind Separator = 3;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItemKind Submenu = 4;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2ContextMenuRequestedEventArgs
    {
        public Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTarget ContextMenuTarget { get { throw null; } }
        public bool Handled { get { throw null; } set { throw null; } }
        public Windows.Foundation.Point Location { get { throw null; } }
        public System.Collections.Generic.IList<Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem> MenuItems { get { throw null; } }
        public int SelectedCommandId { get { throw null; } set { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public Windows.Foundation.Deferral GetDeferral() { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTargetRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2ContextMenuTarget
    {
        public string FrameUri { get { throw null; } }
        public bool HasLinkText { get { throw null; } }
        public bool HasLinkUri { get { throw null; } }
        public bool HasSelection { get { throw null; } }
        public bool HasSourceUri { get { throw null; } }
        public bool IsEditable { get { throw null; } }
        public bool IsRequestedForMainFrame { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTargetKind Kind { get { throw null; } }
        public string LinkText { get { throw null; } }
        public string LinkUri { get { throw null; } }
        public string PageUri { get { throw null; } }
        public string SelectionText { get { throw null; } }
        public string SourceUri { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTarget FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTarget x, Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTarget y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTarget x, Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTarget y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTarget other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2ContextMenuTargetKind
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTargetKind Audio = 3;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTargetKind Image = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTargetKind Page = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTargetKind SelectedText = 2;
        public int value__;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTargetKind Video = 4;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2ControllerRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public partial class CoreWebView2Controller
    {
        protected internal CoreWebView2Controller(WinRT.IObjectReference objRef) { throw null; }
        protected CoreWebView2Controller(WinRT.DerivedComposed _) { throw null; }
        public bool AllowExternalDrop { get { throw null; } set { throw null; } }
        public Windows.Foundation.Rect Bounds { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2BoundsMode BoundsMode { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2 CoreWebView2 { get { throw null; } }
        public Windows.UI.Color DefaultBackgroundColor { get { throw null; } set { throw null; } }
        public bool IsBrowserHitTransparent { get { throw null; } }
        public bool IsVisible { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference ParentWindow { get { throw null; } set { throw null; } }
        public double RasterizationScale { get { throw null; } set { throw null; } }
        public bool ShouldDetectMonitorScaleChanges { get { throw null; } set { throw null; } }
        public double ZoomFactor { get { throw null; } set { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2Controller FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2Controller x, Microsoft.Web.WebView2.Core.CoreWebView2Controller y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2Controller x, Microsoft.Web.WebView2.Core.CoreWebView2Controller y) { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Controller, Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs> AcceleratorKeyPressed { add { throw null; } remove { throw null; } }
        public void Close() { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2Controller other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Controller, object> GotFocus { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Controller, object> LostFocus { add { throw null; } remove { throw null; } }
        public void MoveFocus(Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusReason reason) { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Controller, Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs> MoveFocusRequested { add { throw null; } remove { throw null; } }
        public void NotifyParentWindowPositionChanged() { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Controller, object> RasterizationScaleChanged { add { throw null; } remove { throw null; } }
        public void SetBoundsAndZoomFactor(Windows.Foundation.Rect Bounds, double ZoomFactor) { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Controller, object> ZoomFactorChanged { add { throw null; } remove { throw null; } }
        protected virtual bool IsOverridableInterface(System.Guid iid) { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptionsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2ControllerOptions
    {
        public bool IsInPrivateModeEnabled { get { throw null; } set { throw null; } }
        public string ProfileName { get { throw null; } set { throw null; } }
        public string ScriptLocale { get { throw null; } set { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptions FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptions x, Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptions y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptions x, Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptions y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptions other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReferenceRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2ControllerWindowReference
    {
        public Windows.UI.Core.CoreWindow CoreWindow { get { throw null; } }
        public ulong WindowHandle { get { throw null; } }
        public static I As<I>() { throw null; }
        public static Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference CreateFromCoreWindow(Windows.UI.Core.CoreWindow coreWindow) { throw null; }
        public static Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference CreateFromWindowHandle(ulong windowHandle) { throw null; }
        public static Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference x, Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference x, Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2CookieRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2Cookie
    {
        public string Domain { get { throw null; } }
        public double Expires { get { throw null; } set { throw null; } }
        public bool IsHttpOnly { get { throw null; } set { throw null; } }
        public bool IsSecure { get { throw null; } set { throw null; } }
        public bool IsSession { get { throw null; } }
        public string Name { get { throw null; } }
        public string Path { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2CookieSameSiteKind SameSite { get { throw null; } set { throw null; } }
        public string Value { get { throw null; } set { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2Cookie FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2Cookie x, Microsoft.Web.WebView2.Core.CoreWebView2Cookie y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2Cookie x, Microsoft.Web.WebView2.Core.CoreWebView2Cookie y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2Cookie other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2CookieManagerRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2CookieManager
    {
        public static Microsoft.Web.WebView2.Core.CoreWebView2CookieManager FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2CookieManager x, Microsoft.Web.WebView2.Core.CoreWebView2CookieManager y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2CookieManager x, Microsoft.Web.WebView2.Core.CoreWebView2CookieManager y) { throw null; }
        public void AddOrUpdateCookie(Microsoft.Web.WebView2.Core.CoreWebView2Cookie cookie) { throw null; }
        public Microsoft.Web.WebView2.Core.CoreWebView2Cookie CopyCookie(Microsoft.Web.WebView2.Core.CoreWebView2Cookie cookieParam) { throw null; }
        public Microsoft.Web.WebView2.Core.CoreWebView2Cookie CreateCookie(string name, string value, string Domain, string Path) { throw null; }
        public void DeleteAllCookies() { throw null; }
        public void DeleteCookie(Microsoft.Web.WebView2.Core.CoreWebView2Cookie cookie) { throw null; }
        public void DeleteCookies(string name, string uri) { throw null; }
        public void DeleteCookiesWithDomainAndPath(string name, string Domain, string Path) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2CookieManager other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public Windows.Foundation.IAsyncOperation<System.Collections.Generic.IReadOnlyList<Microsoft.Web.WebView2.Core.CoreWebView2Cookie>> GetCookiesAsync(string uri) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2CookieSameSiteKind
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2CookieSameSiteKind Lax = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2CookieSameSiteKind None = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2CookieSameSiteKind Strict = 2;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2CustomSchemeRegistrationRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2CustomSchemeRegistration
    {
        public CoreWebView2CustomSchemeRegistration(string schemeName) { throw null; }
        public System.Collections.Generic.IList<string> AllowedOrigins { get { throw null; } }
        public bool HasAuthorityComponent { get { throw null; } set { throw null; } }
        public string SchemeName { get { throw null; } }
        public int TreatAsSecure { get { throw null; } set { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2CustomSchemeRegistration FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2CustomSchemeRegistration x, Microsoft.Web.WebView2.Core.CoreWebView2CustomSchemeRegistration y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2CustomSchemeRegistration x, Microsoft.Web.WebView2.Core.CoreWebView2CustomSchemeRegistration y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2CustomSchemeRegistration other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2DefaultDownloadDialogCornerAlignment
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2DefaultDownloadDialogCornerAlignment BottomLeft = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DefaultDownloadDialogCornerAlignment BottomRight = 3;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DefaultDownloadDialogCornerAlignment TopLeft = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DefaultDownloadDialogCornerAlignment TopRight = 1;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2DevToolsProtocolEventReceivedEventArgs
    {
        public string ParameterObjectAsJson { get { throw null; } }
        public string SessionId { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceiverRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2DevToolsProtocolEventReceiver
    {
        public static Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceiver FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceiver x, Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceiver y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceiver x, Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceiver y) { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2, Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs> DevToolsProtocolEventReceived { add { throw null; } remove { throw null; } }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceiver other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2DOMContentLoadedEventArgs
    {
        public ulong NavigationId { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2DownloadInterruptReason
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason DownloadProcessCrashed = 29;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason FileAccessDenied = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason FileBlockedByPolicy = 8;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason FileFailed = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason FileHashMismatch = 11;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason FileMalicious = 6;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason FileNameTooLong = 4;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason FileNoSpace = 3;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason FileSecurityCheckFailed = 9;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason FileTooLarge = 5;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason FileTooShort = 10;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason FileTransientError = 7;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason NetworkDisconnected = 14;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason NetworkFailed = 12;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason NetworkInvalidRequest = 16;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason NetworkServerDown = 15;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason NetworkTimeout = 13;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason None = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason ServerBadContent = 19;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason ServerCertificateProblem = 21;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason ServerContentLengthMismatch = 24;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason ServerCrossOriginRedirect = 25;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason ServerFailed = 17;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason ServerForbidden = 22;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason ServerNoRange = 18;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason ServerUnauthorized = 20;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason ServerUnexpectedResponse = 23;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason UserCanceled = 26;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason UserPaused = 28;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason UserShutdown = 27;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperationRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2DownloadOperation
    {
        public long BytesReceived { get { throw null; } }
        public bool CanResume { get { throw null; } }
        public string ContentDisposition { get { throw null; } }
        public string EstimatedEndTime { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason InterruptReason { get { throw null; } }
        public string MimeType { get { throw null; } }
        public string ResultFilePath { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2DownloadState State { get { throw null; } }
        public long TotalBytesToReceive { get { throw null; } }
        public string Uri { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation x, Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation x, Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation y) { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation, object> BytesReceivedChanged { add { throw null; } remove { throw null; } }
        public void Cancel() { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation, object> EstimatedEndTimeChanged { add { throw null; } remove { throw null; } }
        public override int GetHashCode() { throw null; }
        public void Pause() { throw null; }
        public void Resume() { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation, object> StateChanged { add { throw null; } remove { throw null; } }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2DownloadStartingEventArgs
    {
        public bool Cancel { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation DownloadOperation { get { throw null; } }
        public bool Handled { get { throw null; } set { throw null; } }
        public string ResultFilePath { get { throw null; } set { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public Windows.Foundation.Deferral GetDeferral() { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2DownloadState
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadState Completed = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadState InProgress = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2DownloadState Interrupted = 1;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2Environment
    {
        public string BrowserVersionString { get { throw null; } }
        public string FailureReportFolderPath { get { throw null; } }
        public string UserDataFolder { get { throw null; } }
        public static I As<I>() { throw null; }
        public static int CompareBrowserVersionString(string browserVersionString1, string browserVersionString2) { throw null; }
        public static Windows.Foundation.IAsyncOperation<Microsoft.Web.WebView2.Core.CoreWebView2Environment> CreateAsync() { throw null; }
        public static Windows.Foundation.IAsyncOperation<Microsoft.Web.WebView2.Core.CoreWebView2Environment> CreateWithOptionsAsync(string browserExecutableFolder, string userDataFolder, Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptions options) { throw null; }
        public static Microsoft.Web.WebView2.Core.CoreWebView2Environment FromAbi(System.IntPtr thisPtr) { throw null; }
        public static string GetAvailableBrowserVersionString() { throw null; }
        public static string GetAvailableBrowserVersionString(string browserExecutableFolder) { throw null; }
        public static string GetAvailableBrowserVersionString(string browserExecutableFolder, Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptions options) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2Environment x, Microsoft.Web.WebView2.Core.CoreWebView2Environment y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2Environment x, Microsoft.Web.WebView2.Core.CoreWebView2Environment y) { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Environment, Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs> BrowserProcessExited { add { throw null; } remove { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem CreateContextMenuItem(string Label, Windows.Storage.Streams.IRandomAccessStream iconStream, Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItemKind Kind) { throw null; }
        public Windows.Foundation.IAsyncOperation<Microsoft.Web.WebView2.Core.CoreWebView2CompositionController> CreateCoreWebView2CompositionControllerAsync(Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference ParentWindow) { throw null; }
        public Windows.Foundation.IAsyncOperation<Microsoft.Web.WebView2.Core.CoreWebView2CompositionController> CreateCoreWebView2CompositionControllerAsync(Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference ParentWindow, Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptions options) { throw null; }
        public Windows.Foundation.IAsyncOperation<Microsoft.Web.WebView2.Core.CoreWebView2Controller> CreateCoreWebView2ControllerAsync(Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference ParentWindow, Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptions options) { throw null; }
        public Windows.Foundation.IAsyncOperation<Microsoft.Web.WebView2.Core.CoreWebView2Controller> CreateCoreWebView2ControllerAsync(Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference ParentWindow) { throw null; }
        public Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptions CreateCoreWebView2ControllerOptions() { throw null; }
        public Microsoft.Web.WebView2.Core.CoreWebView2PointerInfo CreateCoreWebView2PointerInfo() { throw null; }
        public Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings CreatePrintSettings() { throw null; }
        public Microsoft.Web.WebView2.Core.CoreWebView2SharedBuffer CreateSharedBuffer(ulong Size) { throw null; }
        public Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandle CreateWebFileSystemDirectoryHandle(string Path, Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandlePermission Permission) { throw null; }
        public Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandle CreateWebFileSystemFileHandle(string Path, Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandlePermission Permission) { throw null; }
        public Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest CreateWebResourceRequest(string uri, string Method, Windows.Storage.Streams.IRandomAccessStream postData, string Headers) { throw null; }
        public Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse CreateWebResourceResponse(Windows.Storage.Streams.IRandomAccessStream Content, int StatusCode, string ReasonPhrase, string Headers) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2Environment other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public Windows.Foundation.IAsyncOperation<System.Collections.Generic.IReadOnlyList<Microsoft.Web.WebView2.Core.CoreWebView2ProcessExtendedInfo>> GetProcessExtendedInfosAsync() { throw null; }
        public System.Collections.Generic.IReadOnlyList<Microsoft.Web.WebView2.Core.CoreWebView2ProcessInfo> GetProcessInfos() { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Environment, object> NewBrowserVersionAvailable { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Environment, object> ProcessInfosChanged { add { throw null; } remove { throw null; } }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptionsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2EnvironmentOptions
    {
        public CoreWebView2EnvironmentOptions() { throw null; }
        public string AdditionalBrowserArguments { get { throw null; } set { throw null; } }
        public bool AllowSingleSignOnUsingOSPrimaryAccount { get { throw null; } set { throw null; } }
        public bool AreBrowserExtensionsEnabled { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2ChannelSearchKind ChannelSearchKind { get { throw null; } set { throw null; } }
        public System.Collections.Generic.IList<Microsoft.Web.WebView2.Core.CoreWebView2CustomSchemeRegistration> CustomSchemeRegistrations { get { throw null; } set { throw null; } }
        public bool EnableTrackingPrevention { get { throw null; } set { throw null; } }
        public bool ExclusiveUserDataFolderAccess { get { throw null; } set { throw null; } }
        public bool IsCustomCrashReportingEnabled { get { throw null; } set { throw null; } }
        public string Language { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2ReleaseChannels ReleaseChannels { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2ScrollbarStyle ScrollBarStyle { get { throw null; } set { throw null; } }
        public string TargetCompatibleBrowserVersion { get { throw null; } set { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptions FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptions x, Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptions y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptions x, Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptions y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptions other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2ExecuteScriptResultRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2ExecuteScriptResult
    {
        public Microsoft.Web.WebView2.Core.CoreWebView2ScriptException Exception { get { throw null; } }
        public string ResultAsJson { get { throw null; } }
        public bool Succeeded { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2ExecuteScriptResult FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2ExecuteScriptResult x, Microsoft.Web.WebView2.Core.CoreWebView2ExecuteScriptResult y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2ExecuteScriptResult x, Microsoft.Web.WebView2.Core.CoreWebView2ExecuteScriptResult y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2ExecuteScriptResult other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public int TryGetResultAsString(out string stringResult) { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2FaviconImageFormat
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2FaviconImageFormat Jpeg = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2FaviconImageFormat Png = 0;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2FileRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2File
    {
        public string Path { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2File FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2File x, Microsoft.Web.WebView2.Core.CoreWebView2File y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2File x, Microsoft.Web.WebView2.Core.CoreWebView2File y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2File other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandleRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2FileSystemHandle
    {
        public Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandleKind Kind { get { throw null; } }
        public string Path { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandlePermission Permission { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandle FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandle x, Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandle y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandle x, Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandle y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandle other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2FileSystemHandleKind
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandleKind Directory = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandleKind File = 0;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2FileSystemHandlePermission
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandlePermission ReadOnly = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandlePermission ReadWrite = 1;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2FrameRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2Frame
    {
        public uint FrameId { get { throw null; } }
        public string Name { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2Frame FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2Frame x, Microsoft.Web.WebView2.Core.CoreWebView2Frame y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2Frame x, Microsoft.Web.WebView2.Core.CoreWebView2Frame y) { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Frame, Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs> ContentLoading { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Frame, object> Destroyed { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Frame, Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs> DOMContentLoaded { add { throw null; } remove { throw null; } }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2Frame other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public Windows.Foundation.IAsyncOperation<string> ExecuteScriptAsync(string javaScript) { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Frame, Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs> FrameCreated { add { throw null; } remove { throw null; } }
        public override int GetHashCode() { throw null; }
        public int IsDestroyed() { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Frame, object> NameChanged { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Frame, Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs> NavigationCompleted { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Frame, Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs> NavigationStarting { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Frame, Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs> PermissionRequested { add { throw null; } remove { throw null; } }
        public void PostSharedBufferToScript(Microsoft.Web.WebView2.Core.CoreWebView2SharedBuffer sharedBuffer, Microsoft.Web.WebView2.Core.CoreWebView2SharedBufferAccess access, string additionalDataAsJson) { throw null; }
        public void PostWebMessageAsJson(string webMessageAsJson) { throw null; }
        public void PostWebMessageAsString(string webMessageAsString) { throw null; }
        public void RemoveHostObjectFromScript(string name) { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Frame, Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs> ScreenCaptureStarting { add { throw null; } remove { throw null; } }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Frame, Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs> WebMessageReceived { add { throw null; } remove { throw null; } }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2FrameCreatedEventArgs
    {
        public Microsoft.Web.WebView2.Core.CoreWebView2Frame Frame { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2FrameInfoRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2FrameInfo
    {
        public uint FrameId { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2FrameKind FrameKind { get { throw null; } }
        public string Name { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo ParentFrameInfo { get { throw null; } }
        public string Source { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo x, Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo x, Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2FrameKind
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2FrameKind Embed = 3;
        public const Microsoft.Web.WebView2.Core.CoreWebView2FrameKind Iframe = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2FrameKind MainFrame = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2FrameKind Object = 4;
        public const Microsoft.Web.WebView2.Core.CoreWebView2FrameKind Unknown = 0;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2HostResourceAccessKind
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2HostResourceAccessKind Allow = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2HostResourceAccessKind Deny = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2HostResourceAccessKind DenyCors = 2;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIteratorRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2HttpHeadersCollectionIterator
    {
        public System.Collections.Generic.KeyValuePair<string, string> Current { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIterator FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIterator x, Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIterator y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIterator x, Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIterator y) { throw null; }
        public void Dispose() { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIterator other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public bool MoveNext() { throw null; }
        public void Reset() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeadersRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2HttpRequestHeaders
    {
        public static Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeaders FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeaders x, Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeaders y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeaders x, Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeaders y) { throw null; }
        public bool Contains(string name) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeaders other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string, string>> GetEnumerator() { throw null; }
        public override int GetHashCode() { throw null; }
        public string GetHeader(string name) { throw null; }
        public Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIterator GetHeaders(string name) { throw null; }
        public void RemoveHeader(string name) { throw null; }
        public void SetHeader(string name, string value) { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeadersRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2HttpResponseHeaders
    {
        public static Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeaders FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeaders x, Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeaders y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeaders x, Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeaders y) { throw null; }
        public void AppendHeader(string name, string value) { throw null; }
        public bool Contains(string name) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeaders other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string, string>> GetEnumerator() { throw null; }
        public override int GetHashCode() { throw null; }
        public string GetHeader(string name) { throw null; }
        public Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIterator GetHeaders(string name) { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2KeyEventKind
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2KeyEventKind KeyDown = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2KeyEventKind KeyUp = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2KeyEventKind SystemKeyDown = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2KeyEventKind SystemKeyUp = 3;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2LaunchingExternalUriSchemeEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2LaunchingExternalUriSchemeEventArgs
    {
        public bool Cancel { get { throw null; } set { throw null; } }
        public string InitiatingOrigin { get { throw null; } }
        public bool IsUserInitiated { get { throw null; } }
        public string Uri { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2LaunchingExternalUriSchemeEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2LaunchingExternalUriSchemeEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2LaunchingExternalUriSchemeEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2LaunchingExternalUriSchemeEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2LaunchingExternalUriSchemeEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2LaunchingExternalUriSchemeEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public Windows.Foundation.Deferral GetDeferral() { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2MemoryUsageTargetLevel
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2MemoryUsageTargetLevel Low = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MemoryUsageTargetLevel Normal = 0;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2MouseEventKind
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind HorizontalWheel = 526;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind Leave = 675;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind LeftButtonDoubleClick = 515;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind LeftButtonDown = 513;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind LeftButtonUp = 514;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind MiddleButtonDoubleClick = 521;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind MiddleButtonDown = 519;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind MiddleButtonUp = 520;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind Move = 512;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind NonClientRightButtonDown = 164;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind NonClientRightButtonUp = 165;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind RightButtonDoubleClick = 518;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind RightButtonDown = 516;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind RightButtonUp = 517;
        public int value__;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind Wheel = 522;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind XButtonDoubleClick = 525;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind XButtonDown = 523;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind XButtonUp = 524;
    }
    [System.FlagsAttribute[missing]]
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2MouseEventVirtualKeys
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventVirtualKeys Control = 8;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventVirtualKeys LeftButton = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventVirtualKeys MiddleButton = 16;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventVirtualKeys None = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventVirtualKeys RightButton = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventVirtualKeys Shift = 4;
        public uint value__;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventVirtualKeys XButton1 = 32;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MouseEventVirtualKeys XButton2 = 64;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2MoveFocusReason
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusReason Next = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusReason Previous = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusReason Programmatic = 0;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2MoveFocusRequestedEventArgs
    {
        public bool Handled { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusReason Reason { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2NavigationCompletedEventArgs
    {
        public int HttpStatusCode { get { throw null; } }
        public bool IsSuccess { get { throw null; } }
        public ulong NavigationId { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus WebErrorStatus { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2NavigationKind
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2NavigationKind BackOrForward = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2NavigationKind NewDocument = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2NavigationKind Reload = 0;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2NavigationStartingEventArgs
    {
        public string AdditionalAllowedFrameAncestors { get { throw null; } set { throw null; } }
        public bool Cancel { get { throw null; } set { throw null; } }
        public bool IsRedirected { get { throw null; } }
        public bool IsUserInitiated { get { throw null; } }
        public ulong NavigationId { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2NavigationKind NavigationKind { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeaders RequestHeaders { get { throw null; } }
        public string Uri { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2NewWindowRequestedEventArgs
    {
        public bool Handled { get { throw null; } set { throw null; } }
        public bool IsUserInitiated { get { throw null; } }
        public string Name { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2 NewWindow { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo OriginalSourceFrameInfo { get { throw null; } }
        public string Uri { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures WindowFeatures { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public Windows.Foundation.Deferral GetDeferral() { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionChangedEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2NonClientRegionChangedEventArgs
    {
        public Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionKind RegionKind { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionChangedEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionChangedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionChangedEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionChangedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionChangedEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionChangedEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2NonClientRegionKind
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionKind Caption = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionKind Client = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionKind Close = 20;
        public const Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionKind Maximize = 9;
        public const Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionKind Minimize = 8;
        public const Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionKind Nowhere = 0;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2NotificationRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2Notification
    {
        public string BadgeUri { get { throw null; } }
        public string Body { get { throw null; } }
        public string BodyImageUri { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2TextDirectionKind Direction { get { throw null; } }
        public string IconUri { get { throw null; } }
        public bool IsSilent { get { throw null; } }
        public string Language { get { throw null; } }
        public bool RequiresInteraction { get { throw null; } }
        public bool ShouldRenotify { get { throw null; } }
        public string Tag { get { throw null; } }
        public double Timestamp { get { throw null; } }
        public string Title { get { throw null; } }
        public System.Collections.Generic.IReadOnlyList<ulong> VibrationPattern { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2Notification FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2Notification x, Microsoft.Web.WebView2.Core.CoreWebView2Notification y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2Notification x, Microsoft.Web.WebView2.Core.CoreWebView2Notification y) { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Notification, object> CloseRequested { add { throw null; } remove { throw null; } }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2Notification other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public void ReportClicked() { throw null; }
        public void ReportClosed() { throw null; }
        public void ReportShown() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2NotificationReceivedEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2NotificationReceivedEventArgs
    {
        public bool Handled { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2Notification Notification { get { throw null; } }
        public string SenderOrigin { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2NotificationReceivedEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2NotificationReceivedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2NotificationReceivedEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2NotificationReceivedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2NotificationReceivedEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2NotificationReceivedEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public Windows.Foundation.Deferral GetDeferral() { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [System.FlagsAttribute[missing]]
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2PdfToolbarItems
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems Bookmarks = 256;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems FitPage = 64;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems FullScreen = 2048;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems MoreSettings = 4096;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems None = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems PageLayout = 128;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems PageSelector = 512;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems Print = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems Rotate = 32;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems Save = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems SaveAs = 4;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems Search = 1024;
        public uint value__;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems ZoomIn = 8;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems ZoomOut = 16;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2PermissionKind
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind Autoplay = 9;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind Camera = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind ClipboardRead = 6;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind FileReadWrite = 8;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind Geolocation = 3;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind LocalFonts = 10;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind Microphone = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind MidiSystemExclusiveMessages = 11;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind MultipleAutomaticDownloads = 7;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind Notifications = 4;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind OtherSensors = 5;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind UnknownPermission = 0;
        public int value__;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind WindowManagement = 12;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2PermissionRequestedEventArgs
    {
        public bool Handled { get { throw null; } set { throw null; } }
        public bool IsUserInitiated { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind PermissionKind { get { throw null; } }
        public bool SavesInProfile { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2PermissionState State { get { throw null; } set { throw null; } }
        public string Uri { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public Windows.Foundation.Deferral GetDeferral() { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2PermissionSettingRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2PermissionSetting
    {
        public Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind PermissionKind { get { throw null; } }
        public string PermissionOrigin { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2PermissionState PermissionState { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2PermissionSetting FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2PermissionSetting x, Microsoft.Web.WebView2.Core.CoreWebView2PermissionSetting y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2PermissionSetting x, Microsoft.Web.WebView2.Core.CoreWebView2PermissionSetting y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2PermissionSetting other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2PermissionState
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2PermissionState Allow = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PermissionState Default = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PermissionState Deny = 2;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null, null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2PhysicalKeyStatus
    {
        public CoreWebView2PhysicalKeyStatus(uint _RepeatCount, uint _ScanCode, int _IsExtendedKey, int _IsMenuKeyDown, int _WasKeyDown, int _IsKeyReleased) { throw null; }
        public int IsExtendedKey;
        public int IsKeyReleased;
        public int IsMenuKeyDown;
        public uint RepeatCount;
        public uint ScanCode;
        public int WasKeyDown;
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2PhysicalKeyStatus x, Microsoft.Web.WebView2.Core.CoreWebView2PhysicalKeyStatus y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2PhysicalKeyStatus x, Microsoft.Web.WebView2.Core.CoreWebView2PhysicalKeyStatus y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2PhysicalKeyStatus other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2PointerEventKind
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2PointerEventKind Activate = 587;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PointerEventKind Down = 582;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PointerEventKind Enter = 585;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PointerEventKind Leave = 586;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PointerEventKind Up = 583;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PointerEventKind Update = 581;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2PointerInfoRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2PointerInfo
    {
        public int ButtonChangeKind { get { throw null; } set { throw null; } }
        public Windows.Foundation.Rect DisplayRect { get { throw null; } set { throw null; } }
        public uint FrameId { get { throw null; } set { throw null; } }
        public Windows.Foundation.Point HimetricLocation { get { throw null; } set { throw null; } }
        public Windows.Foundation.Point HimetricLocationRaw { get { throw null; } set { throw null; } }
        public uint HistoryCount { get { throw null; } set { throw null; } }
        public int InputData { get { throw null; } set { throw null; } }
        public uint KeyStates { get { throw null; } set { throw null; } }
        public uint PenFlags { get { throw null; } set { throw null; } }
        public uint PenMask { get { throw null; } set { throw null; } }
        public uint PenPressure { get { throw null; } set { throw null; } }
        public uint PenRotation { get { throw null; } set { throw null; } }
        public int PenTiltX { get { throw null; } set { throw null; } }
        public int PenTiltY { get { throw null; } set { throw null; } }
        public ulong PerformanceCount { get { throw null; } set { throw null; } }
        public Windows.Foundation.Point PixelLocation { get { throw null; } set { throw null; } }
        public Windows.Foundation.Point PixelLocationRaw { get { throw null; } set { throw null; } }
        public Windows.Foundation.Rect PointerDeviceRect { get { throw null; } set { throw null; } }
        public uint PointerFlags { get { throw null; } set { throw null; } }
        public uint PointerId { get { throw null; } set { throw null; } }
        public uint PointerKind { get { throw null; } set { throw null; } }
        public uint Time { get { throw null; } set { throw null; } }
        public Windows.Foundation.Rect TouchContact { get { throw null; } set { throw null; } }
        public Windows.Foundation.Rect TouchContactRaw { get { throw null; } set { throw null; } }
        public uint TouchFlags { get { throw null; } set { throw null; } }
        public uint TouchMask { get { throw null; } set { throw null; } }
        public uint TouchOrientation { get { throw null; } set { throw null; } }
        public uint TouchPressure { get { throw null; } set { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2PointerInfo FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2PointerInfo x, Microsoft.Web.WebView2.Core.CoreWebView2PointerInfo y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2PointerInfo x, Microsoft.Web.WebView2.Core.CoreWebView2PointerInfo y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2PointerInfo other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2PreferredColorScheme
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2PreferredColorScheme Auto = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PreferredColorScheme Dark = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PreferredColorScheme Light = 1;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2PrintCollation
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2PrintCollation Collated = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PrintCollation Default = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PrintCollation Uncollated = 2;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2PrintColorMode
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2PrintColorMode Color = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PrintColorMode Default = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PrintColorMode Grayscale = 2;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2PrintDialogKind
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2PrintDialogKind Browser = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PrintDialogKind System = 1;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2PrintDuplex
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2PrintDuplex Default = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PrintDuplex OneSided = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PrintDuplex TwoSidedLongEdge = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PrintDuplex TwoSidedShortEdge = 3;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2PrintMediaSize
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2PrintMediaSize Custom = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PrintMediaSize Default = 0;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2PrintOrientation
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2PrintOrientation Landscape = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PrintOrientation Portrait = 0;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2PrintSettingsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2PrintSettings
    {
        public Microsoft.Web.WebView2.Core.CoreWebView2PrintCollation Collation { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2PrintColorMode ColorMode { get { throw null; } set { throw null; } }
        public int Copies { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2PrintDuplex Duplex { get { throw null; } set { throw null; } }
        public string FooterUri { get { throw null; } set { throw null; } }
        public string HeaderTitle { get { throw null; } set { throw null; } }
        public double MarginBottom { get { throw null; } set { throw null; } }
        public double MarginLeft { get { throw null; } set { throw null; } }
        public double MarginRight { get { throw null; } set { throw null; } }
        public double MarginTop { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2PrintMediaSize MediaSize { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2PrintOrientation Orientation { get { throw null; } set { throw null; } }
        public double PageHeight { get { throw null; } set { throw null; } }
        public string PageRanges { get { throw null; } set { throw null; } }
        public int PagesPerSide { get { throw null; } set { throw null; } }
        public double PageWidth { get { throw null; } set { throw null; } }
        public string PrinterName { get { throw null; } set { throw null; } }
        public double ScaleFactor { get { throw null; } set { throw null; } }
        public bool ShouldPrintBackgrounds { get { throw null; } set { throw null; } }
        public bool ShouldPrintHeaderAndFooter { get { throw null; } set { throw null; } }
        public bool ShouldPrintSelectionOnly { get { throw null; } set { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings x, Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings x, Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2PrintStatus
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2PrintStatus OtherError = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PrintStatus PrinterUnavailable = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2PrintStatus Succeeded = 0;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2ProcessExtendedInfoRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2ProcessExtendedInfo
    {
        public System.Collections.Generic.IReadOnlyList<Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo> AssociatedFrameInfos { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2ProcessInfo ProcessInfo { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2ProcessExtendedInfo FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2ProcessExtendedInfo x, Microsoft.Web.WebView2.Core.CoreWebView2ProcessExtendedInfo y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2ProcessExtendedInfo x, Microsoft.Web.WebView2.Core.CoreWebView2ProcessExtendedInfo y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2ProcessExtendedInfo other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2ProcessFailedEventArgs
    {
        public int ExitCode { get { throw null; } }
        public string FailureSourceModulePath { get { throw null; } }
        public System.Collections.Generic.IReadOnlyList<Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo> FrameInfosForFailedProcess { get { throw null; } }
        public string ProcessDescription { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedKind ProcessFailedKind { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedReason Reason { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2ProcessFailedKind
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedKind BrowserProcessExited = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedKind FrameRenderProcessExited = 3;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedKind GpuProcessExited = 6;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedKind PpapiBrokerProcessExited = 8;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedKind PpapiPluginProcessExited = 7;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedKind RenderProcessExited = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedKind RenderProcessUnresponsive = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedKind SandboxHelperProcessExited = 5;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedKind UnknownProcessExited = 9;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedKind UtilityProcessExited = 4;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2ProcessFailedReason
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedReason Crashed = 3;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedReason LaunchFailed = 4;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedReason OutOfMemory = 5;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedReason ProfileDeleted = 6;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedReason Terminated = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedReason Unexpected = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedReason Unresponsive = 1;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2ProcessInfoRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2ProcessInfo
    {
        public Microsoft.Web.WebView2.Core.CoreWebView2ProcessKind Kind { get { throw null; } }
        public int ProcessId { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2ProcessInfo FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2ProcessInfo x, Microsoft.Web.WebView2.Core.CoreWebView2ProcessInfo y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2ProcessInfo x, Microsoft.Web.WebView2.Core.CoreWebView2ProcessInfo y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2ProcessInfo other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2ProcessKind
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessKind Browser = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessKind Gpu = 4;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessKind PpapiBroker = 6;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessKind PpapiPlugin = 5;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessKind Renderer = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessKind SandboxHelper = 3;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ProcessKind Utility = 2;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2ProfileRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2Profile
    {
        public Microsoft.Web.WebView2.Core.CoreWebView2CookieManager CookieManager { get { throw null; } }
        public string DefaultDownloadFolderPath { get { throw null; } set { throw null; } }
        public bool IsGeneralAutofillEnabled { get { throw null; } set { throw null; } }
        public bool IsInPrivateModeEnabled { get { throw null; } }
        public bool IsPasswordAutosaveEnabled { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2PreferredColorScheme PreferredColorScheme { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2TrackingPreventionLevel PreferredTrackingPreventionLevel { get { throw null; } set { throw null; } }
        public string ProfileName { get { throw null; } }
        public string ProfilePath { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2Profile FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2Profile x, Microsoft.Web.WebView2.Core.CoreWebView2Profile y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2Profile x, Microsoft.Web.WebView2.Core.CoreWebView2Profile y) { throw null; }
        public Windows.Foundation.IAsyncOperation<Microsoft.Web.WebView2.Core.CoreWebView2BrowserExtension> AddBrowserExtensionAsync(string extensionFolderPath) { throw null; }
        public Windows.Foundation.IAsyncAction ClearBrowsingDataAsync(Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds dataKinds, System.DateTimeOffset startTime, System.DateTimeOffset endTime) { throw null; }
        public Windows.Foundation.IAsyncAction ClearBrowsingDataAsync() { throw null; }
        public Windows.Foundation.IAsyncAction ClearBrowsingDataAsync(Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds dataKinds) { throw null; }
        public void Delete() { throw null; }
        public event Windows.Foundation.TypedEventHandler<Microsoft.Web.WebView2.Core.CoreWebView2Profile, object> Deleted { add { throw null; } remove { throw null; } }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2Profile other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public Windows.Foundation.IAsyncOperation<System.Collections.Generic.IReadOnlyList<Microsoft.Web.WebView2.Core.CoreWebView2BrowserExtension>> GetBrowserExtensionsAsync() { throw null; }
        public override int GetHashCode() { throw null; }
        public Windows.Foundation.IAsyncOperation<System.Collections.Generic.IReadOnlyList<Microsoft.Web.WebView2.Core.CoreWebView2PermissionSetting>> GetNonDefaultPermissionSettingsAsync() { throw null; }
        public Windows.Foundation.IAsyncAction SetPermissionStateAsync(Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind PermissionKind, string origin, Microsoft.Web.WebView2.Core.CoreWebView2PermissionState State) { throw null; }
    }
    [System.FlagsAttribute[missing]]
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2ReleaseChannels
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2ReleaseChannels Beta = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ReleaseChannels Canary = 8;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ReleaseChannels Dev = 4;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ReleaseChannels None = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ReleaseChannels Stable = 1;
        public uint value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2SaveAsKind
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2SaveAsKind Complete = 3;
        public const Microsoft.Web.WebView2.Core.CoreWebView2SaveAsKind Default = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2SaveAsKind HtmlOnly = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2SaveAsKind SingleFile = 2;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2SaveAsUIResult
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIResult Cancelled = 4;
        public const Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIResult FileAlreadyExists = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIResult InvalidPath = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIResult KindNotSupported = 3;
        public const Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIResult Success = 0;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIShowingEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2SaveAsUIShowingEventArgs
    {
        public bool AllowReplace { get { throw null; } set { throw null; } }
        public bool Cancel { get { throw null; } set { throw null; } }
        public string ContentMimeType { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2SaveAsKind Kind { get { throw null; } set { throw null; } }
        public string SaveAsFilePath { get { throw null; } set { throw null; } }
        public bool SuppressDefaultDialog { get { throw null; } set { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIShowingEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIShowingEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIShowingEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIShowingEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIShowingEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIShowingEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public Windows.Foundation.Deferral GetDeferral() { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2SaveFileSecurityCheckStartingEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2SaveFileSecurityCheckStartingEventArgs
    {
        public bool CancelSave { get { throw null; } set { throw null; } }
        public string DocumentOriginUri { get { throw null; } }
        public string FileExtension { get { throw null; } }
        public string FilePath { get { throw null; } }
        public bool SuppressDefaultPolicy { get { throw null; } set { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2SaveFileSecurityCheckStartingEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2SaveFileSecurityCheckStartingEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2SaveFileSecurityCheckStartingEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2SaveFileSecurityCheckStartingEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2SaveFileSecurityCheckStartingEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2SaveFileSecurityCheckStartingEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public Windows.Foundation.Deferral GetDeferral() { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2ScreenCaptureStartingEventArgs
    {
        public bool Cancel { get { throw null; } set { throw null; } }
        public bool Handled { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo OriginalSourceFrameInfo { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public Windows.Foundation.Deferral GetDeferral() { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2ScriptDialogKind
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogKind Alert = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogKind Beforeunload = 3;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogKind Confirm = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogKind Prompt = 2;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2ScriptDialogOpeningEventArgs
    {
        public string DefaultText { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogKind Kind { get { throw null; } }
        public string Message { get { throw null; } }
        public string ResultText { get { throw null; } set { throw null; } }
        public string Uri { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs y) { throw null; }
        public void Accept() { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public Windows.Foundation.Deferral GetDeferral() { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2ScriptExceptionRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2ScriptException
    {
        public uint ColumnNumber { get { throw null; } }
        public uint LineNumber { get { throw null; } }
        public string Message { get { throw null; } }
        public string Name { get { throw null; } }
        public string ToJson { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2ScriptException FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2ScriptException x, Microsoft.Web.WebView2.Core.CoreWebView2ScriptException y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2ScriptException x, Microsoft.Web.WebView2.Core.CoreWebView2ScriptException y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2ScriptException other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2ScrollbarStyle
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2ScrollbarStyle Default = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ScrollbarStyle FluentOverlay = 1;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2ServerCertificateErrorAction
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorAction AlwaysAllow = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorAction Cancel = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorAction Default = 2;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2ServerCertificateErrorDetectedEventArgs
    {
        public Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorAction Action { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus ErrorStatus { get { throw null; } }
        public string RequestUri { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2Certificate ServerCertificate { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public Windows.Foundation.Deferral GetDeferral() { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2SettingsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2Settings
    {
        public bool AreBrowserAcceleratorKeysEnabled { get { throw null; } set { throw null; } }
        public bool AreDefaultContextMenusEnabled { get { throw null; } set { throw null; } }
        public bool AreDefaultScriptDialogsEnabled { get { throw null; } set { throw null; } }
        public bool AreDevToolsEnabled { get { throw null; } set { throw null; } }
        public bool AreHostObjectsAllowed { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems HiddenPdfToolbarItems { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapter HostObjectDispatchAdapter { get { throw null; } set { throw null; } }
        public bool IsBuiltInErrorPageEnabled { get { throw null; } set { throw null; } }
        public bool IsGeneralAutofillEnabled { get { throw null; } set { throw null; } }
        public bool IsNonClientRegionSupportEnabled { get { throw null; } set { throw null; } }
        public bool IsPasswordAutosaveEnabled { get { throw null; } set { throw null; } }
        public bool IsPinchZoomEnabled { get { throw null; } set { throw null; } }
        public bool IsReputationCheckingRequired { get { throw null; } set { throw null; } }
        public bool IsScriptEnabled { get { throw null; } set { throw null; } }
        public bool IsStatusBarEnabled { get { throw null; } set { throw null; } }
        public bool IsSwipeNavigationEnabled { get { throw null; } set { throw null; } }
        public bool IsWebMessageEnabled { get { throw null; } set { throw null; } }
        public bool IsZoomControlEnabled { get { throw null; } set { throw null; } }
        public string UserAgent { get { throw null; } set { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2Settings FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2Settings x, Microsoft.Web.WebView2.Core.CoreWebView2Settings y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2Settings x, Microsoft.Web.WebView2.Core.CoreWebView2Settings y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2Settings other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2SharedBufferRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2SharedBuffer
    {
        public Windows.Foundation.IMemoryBufferReference Buffer { get { throw null; } }
        public ulong Size { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2SharedBuffer FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2SharedBuffer x, Microsoft.Web.WebView2.Core.CoreWebView2SharedBuffer y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2SharedBuffer x, Microsoft.Web.WebView2.Core.CoreWebView2SharedBuffer y) { throw null; }
        public void Dispose() { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2SharedBuffer other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public Windows.Storage.Streams.IRandomAccessStream OpenStream() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2SharedBufferAccess
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2SharedBufferAccess ReadOnly = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2SharedBufferAccess ReadWrite = 1;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2SourceChangedEventArgs
    {
        public bool IsNewDocument { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2TextDirectionKind
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2TextDirectionKind Default = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2TextDirectionKind LeftToRight = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2TextDirectionKind RightToLeft = 2;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2TrackingPreventionLevel
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2TrackingPreventionLevel Balanced = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2TrackingPreventionLevel Basic = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2TrackingPreventionLevel None = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2TrackingPreventionLevel Strict = 3;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2WebErrorStatus
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus CannotConnect = 12;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus CertificateCommonNameIsIncorrect = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus CertificateExpired = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus CertificateIsInvalid = 5;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus CertificateRevoked = 4;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus ClientCertificateContainsErrors = 3;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus ConnectionAborted = 9;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus ConnectionReset = 10;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus Disconnected = 11;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus ErrorHttpInvalidServerResponse = 8;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus HostNameNotResolved = 13;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus OperationCanceled = 14;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus RedirectFailed = 15;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus ServerUnreachable = 6;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus Timeout = 7;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus UnexpectedError = 16;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus Unknown = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus ValidAuthenticationCredentialsRequired = 17;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus ValidProxyAuthenticationRequired = 18;
        public int value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2WebMessageReceivedEventArgs
    {
        public System.Collections.Generic.IReadOnlyList<object> AdditionalObjects { get { throw null; } }
        public string Source { get { throw null; } }
        public string WebMessageAsJson { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public string TryGetWebMessageAsString() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2WebResourceContext
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext All = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext CspViolationReport = 15;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext Document = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext EventSource = 10;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext Fetch = 8;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext Font = 5;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext Image = 3;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext Manifest = 12;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext Media = 4;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext Other = 16;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext Ping = 14;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext Script = 6;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext SignedExchange = 13;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext Stylesheet = 2;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext TextTrack = 9;
        public int value__;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext Websocket = 11;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext XmlHttpRequest = 7;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2WebResourceRequest
    {
        public Windows.Storage.Streams.IRandomAccessStream Content { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeaders Headers { get { throw null; } }
        public string Method { get { throw null; } set { throw null; } }
        public string Uri { get { throw null; } set { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest x, Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest x, Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2WebResourceRequestedEventArgs
    {
        public Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest Request { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestSourceKinds RequestedSourceKind { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext ResourceContext { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse Response { get { throw null; } set { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public Windows.Foundation.Deferral GetDeferral() { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [System.FlagsAttribute[missing]]
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WinRTExposedTypeAttribute[missing]]
    public sealed partial class CoreWebView2WebResourceRequestSourceKinds
    {
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestSourceKinds All = 4294967295;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestSourceKinds Document = 1;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestSourceKinds None = 0;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestSourceKinds ServiceWorker = 4;
        public const Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestSourceKinds SharedWorker = 2;
        public uint value__;
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2WebResourceResponse
    {
        public Windows.Storage.Streams.IRandomAccessStream Content { get { throw null; } set { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeaders Headers { get { throw null; } }
        public string ReasonPhrase { get { throw null; } set { throw null; } }
        public int StatusCode { get { throw null; } set { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse x, Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse x, Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgsRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2WebResourceResponseReceivedEventArgs
    {
        public Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest Request { get { throw null; } }
        public Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseView Response { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs x, Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseViewRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2WebResourceResponseView
    {
        public Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeaders Headers { get { throw null; } }
        public string ReasonPhrase { get { throw null; } }
        public int StatusCode { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseView FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseView x, Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseView y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseView x, Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseView y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseView other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.IRandomAccessStream> GetContentAsync() { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    [ABI.Microsoft.Web.WebView2.Core.CoreWebView2WindowFeaturesRcwFactoryAttribute]
    [WinRT.ProjectedRuntimeClassAttribute[missing]]
    public sealed partial class CoreWebView2WindowFeatures
    {
        public bool HasPosition { get { throw null; } }
        public bool HasSize { get { throw null; } }
        public uint Height { get { throw null; } }
        public uint Left { get { throw null; } }
        public bool ShouldDisplayMenuBar { get { throw null; } }
        public bool ShouldDisplayScrollBars { get { throw null; } }
        public bool ShouldDisplayStatus { get { throw null; } }
        public bool ShouldDisplayToolbar { get { throw null; } }
        public uint Top { get { throw null; } }
        public uint Width { get { throw null; } }
        public static Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures FromAbi(System.IntPtr thisPtr) { throw null; }
        public static bool operator ==(Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures x, Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures y) { throw null; }
        public static bool operator !=(Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures x, Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures y) { throw null; }
        public bool Equals(Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures other) { throw null; }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
    }
    [WinRT.WindowsRuntimeTypeAttribute[missing](null)]
    [System.Runtime.InteropServices.GuidAttribute[missing](null)]
    [WinRT.WindowsRuntimeHelperTypeAttribute[missing]]
    public partial interface ICoreWebView2DispatchAdapter
    {
        void Clean();
        object UnwrapObject(object wrapped);
        object WrapNamedObject(string name, Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapter adapter);
        object WrapObject(object unwrapped, Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapter adapter);
    }
}
