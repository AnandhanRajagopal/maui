parameters:
  CeapexPat: $(dn-bot-ceapex-package-r) # PAT for the loc AzDO instance https://dev.azure.com/ceapex
  GithubPat: $(BotAccount-dotnet-bot-repo-PAT)
  # lclFileChange: false

stages:
  - stage: localization_handback
    displayName: Localization Handback
    dependsOn: []
    condition: eq(variables.isLocBranch, true)

    jobs:
      - job: check_lcl_files
        displayName: 'Check for .lcl files'
        pool: $(HostedWinVS2019)
        steps:
          - powershell: |
              $hasLclFiles = git diff --name-only HEAD~1 HEAD | Select-String '\.lcl$'
              if ($hasLclFiles) {
                Write-Host "##vso[task.setvariable variable=lclFileChange;isOutput=true]true"
              } else {
                Write-Host "##vso[task.setvariable variable=lclFileChange;isOutput=true]false"
              }
            displayName: 'Check for .lcl files in the commit'

          - script: |
              echo "Output value: $(dependencies.check_lcl_files.outputs['check_lcl_files.lclFileChange'])"
              echo "Output value: $(dependencies.check_lcl_files['check_lcl_files.lclFileChange'])"
            displayName: 'Debug output variable'

        outputs:
          lclFileChange: $[ dependencies.check_lcl_files.outputs['lclFileChange'] ]

      - job : generate_resx
        displayName: 'Process incoming translations'
        pool:  $(HostedWinVS2019)
        dependsOn: check_lcl_files
        condition: eq(dependencies.check_lcl_files.outputs['check_lcl_files.lclFileChange'], 'true')

        variables:
          - group: OneLocBuildVariables # Contains the CeapexPat and GithubPat

        steps:
          - task: OneLocBuild@2
            displayName: 'Localization Build'
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)
            inputs:
              locProj: 'eng/automation/LocProject.json'
              outDir: '$(Build.ArtifactStagingDirectory)'
              packageSourceAuth: patAuth
              patVariable: ${{ parameters.CeapexPat }}
              isCreatePrSelected: true
              isAutoCompletePrSelected: false
              repoType: gitHub
              prSourceBranchPrefix: $(LocBranchPrefix)
              gitHubPatVariable: "${{ parameters.GithubPat }}"
              gitHubPrMergeMethod: merge
